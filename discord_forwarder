#!/usr/bin/env python
# https://discord.com/developers/docs/resources/channel#create-message
import os
import sys
from typing import List
import requests
import logging

'''discord_forwarder is a CLI for posting to a discord channel'''

base_url = 'https://discord.com/api'

if os.environ.get('DEBUG'):
    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', datefmt='%d-%b-%y %H:%M:%S', level=logging.DEBUG)
else:
    logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', datefmt='%d-%b-%y %H:%M:%S', level=logging.INFO)

env_var_err = False
# read required env vars
vars = ['DF_TOKEN','DF_CHANNELS','DF_MESSAGE']
for v in vars:
    globals()[v.lower()]=os.environ.get(v)
    if not globals()[v.lower()]:
        logging.error(f"you must define the environment variable {v}")
        env_var_err = True

if env_var_err:
    sys.exit(1)


headers = {"Authorization": f"Bot {df_token}"} 

def get_channel_list(channels: str) -> (List):
    '''Validate that the channels string can be converted into a list of ints.'''
    channel_list = []
    try:
        for channel in channels.split(","):
            channel_list.append(int(channel.strip()))
    except:
        logging.error(f"invalid channel list: {channels}")
        sys.exit(1)
    return channel_list

channel_ids=get_channel_list(df_channels)

def post_to_channel(channel_id: str, message: str):
    '''Submit a message to a discord channel.'''
    path = f'/channels/{channel_id}/messages'
    full_url = f"{base_url}{path}"
    logging.debug(f"full_url: {full_url}")
    data={
        "content": message
    }
    logging.debug(data)
    try:
        response  = requests.post(full_url, headers=headers, json=data)
        response.raise_for_status()
        logging.info(f"{full_url} status code: {response.status_code}")
    except requests.exceptions.HTTPError as e:
        logging.error(e, file=sys.stderr)
    except requests.exceptions.RequestException as e:
        logging.error(e, file=sys.stderr)

if __name__ == "__main__":
    for channel in channel_ids:
        post_to_channel(channel, df_message)






